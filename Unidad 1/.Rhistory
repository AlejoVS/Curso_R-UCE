resultado
bdd_bikes <- read_excel("Datasets/data_bikes/bikes.xlsx")
bdd_shop <- read_excel("Datasets/data_bikes/bikeshops.xlsx")
View(bdd_bikes)
View(bdd_shop)
bdd_orders <- read_excel("Datasets/data_bikes/orderlines.xlsx")
View(bdd_orders)
bdd_1 <- data.frame(id=(1:30),costo=(500:530))
bdd_1 <- data.frame(id=(1:30),costo=(20:30))
bdd_1 <- data.frame(id=(1:10),costo=(20:30,1))
bdd_1 <- data.frame(id=(1:10),costo=seq(20,30,1))
bdd_1 <- data.frame(id=(1:10),costo=seq(20,30,2))
bdd_1 <- data.frame(id=(1:10),costo=seq(20,40,2))
id=(1:10)
costo=seq(20,40,2)
bdd_1 <- data.frame(id=(1:10),costo=seq(20,40,2))
bdd_1 <- data.frame(id=(1:10),costo=seq(20,41,2))
bdd_1 <- data.frame(id=(1:10),costo=seq(21,49,2))
bdd_1 <- data.frame(id=(1:10),costo=seq(20,49,2))
bdd_1 <- data.frame(id=(1:10),costo=seq(100:109))
bdd_1 <- data.frame(id=(1:10),costo=seq(100:109))
bdd_1 <- data.frame(id=(2:8),costo=seq(100:107))
bdd_1 <- data.frame(id=(2:8),costo=seq(100:106))
bdd_1 <- data.frame(id=(1:10),costo=seq(100:109))
bdd_2 <- data.frame(id=(2:8),costo=seq(100:106))
View(bdd_1)
View(bdd_2)
bdd_2 <- data.frame(id=(2:8),costo=letter(1:7))
bdd_2 <- data.frame(id=(2:8),costo=letter(1:6))
bdd_2 <- data.frame(id=(2:8),costo=letter(1:7))
bdd_2 <- data.frame(id=(2:8),costo=letter[1:7])
bdd_2 <- data.frame(id=(2:8),costo=letters[1:7])
View(bdd_2)
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id")
bdd_inner
bdd_2 <- data.frame(id=(2:8),producto=letters[1:7])
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id")
bdd_inner
bdd_inner <- bdd_1 %>% inner_join(bdd_2,by = "id")
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all = TRUE) # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% full_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all.x = TRUE) # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% left_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_1 <- data.frame(id=(1:10),costo=seq(100:109))
bdd_2 <- data.frame(id=(2:8),producto=letters[1:7])
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id") # usando funcion merge
bdd_inner
bdd_1 <- data.frame(id=(1:10),costo=seq(100,109))
bdd_2 <- data.frame(id=(2:8),producto=letters[1:7])
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id") # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% inner_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all = TRUE) # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% full_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id") # usando funcion merge
bdd_inner
bdd_1 <- data.frame(id=(1:10),costo=seq(100,109))
bdd_2 <- data.frame(id=seq(2,10,2),producto=letters[1:7])
bdd_1 <- data.frame(id=(1:10),costo=seq(100,109))
bdd_2 <- data.frame(id=seq(2,10,2),producto=letters[1:7])
bdd_2 <- data.frame(id=seq(2,10,2),producto=letters[1:5])
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id") # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% inner_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all = TRUE) # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% full_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all.x = TRUE) # usando funcion merge
bdd_inner
bdd_1 <- data.frame(id=(1:5),costo=seq(100,105))
bdd_1 <- data.frame(id=(1:5),costo=seq(100,104))
bdd_2 <- data.frame(id=seq(2,10,2),producto=letters[1:5])
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id") # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% inner_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all = TRUE) # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% full_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all.x = TRUE) # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% left_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all.x = TRUE) # usando funcion merge
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all.y = TRUE) # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% right_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_bikes <- read_excel("Datasets/data_bikes/bikes.xlsx")
bdd_shop <- read_excel("Datasets/data_bikes/bikeshops.xlsx")
bdd_orders <- read_excel("Datasets/data_bikes/orderlines.xlsx")
# Definir semilla para reproducibilidad
set.seed(5)
# Definir semilla para reproducibilidad
set.seed(1235)
df_base <- data.frame(Alumno = LETTERS[1:6], Matematicas = sample(x = 1:10, size = 6, replace = TRUE),
Lenguaje = sample(x = 1:10, size = 6, replace = TRUE))
df_base
df_modificatorio <- data.frame(Alumno = c("E", "C"), Matematicas = c(99, 88))
df_modificatorio
df_base$no %in% df_modificatorio$Alumno #pregunto de la data base se encuentra contenido por la modificada
df_base$lumno %in% df_modificatorio$Alumno #pregunto de la data base se encuentra contenido por la modificad
df_base$Alumno %in% df_modificatorio$Alumno #pregunto de la data base se encuentra contenido por la modificad
# Con la funcion match
# match
match(x= df_base$Alum, table= df_modificatorio$Alum, nomatch= 0)
# Con la funcion match
# match
match(x= df_base$Alum, table= df_modificatorio$Alum)
# Con la funcion match
# match
match(x= df_base$Alumno, table= df_modificatorio$Alumno,nomatch = 0)
View(df_modificatorio)
df_base[df_base$Alumno %in% df_modificatorio$Alumno, ]
bdd_bikes <- read_excel("Datasets/data_bikes/bikes.xlsx")
bdd_shop <- read_excel("Datasets/data_bikes/bikeshops.xlsx")
bdd_orders <- read_excel("Datasets/data_bikes/orderlines.xlsx")
glimpse(bdd_bikes)
View(bdd_bikes)
View(bdd_orders)
left_join(bdd_orders, bdd_bikes,by.x = "product.id",by.y = "bike.id")
left_join(bdd_orders, bdd_bikes,by = c("product.id" = "bike.id"))
a <- left_join(bdd_orders, bdd_bikes,by = c("product.id" = "bike.id"))
a
View(a)
View(bdd_shop)
View(bdd_orders)
bike_final <- bdd_orders %>%
left_join(bdd_bikes,by = c("product.id" = "bike.id")) %>%
left_join(bdd_shop,by = c("customer.id" = "bikeshop.id")) %>%
bike_final %>%  glimpse()
bike_final <- bdd_orders %>%
left_join(bdd_bikes,by = c("product.id" = "bike.id")) %>%
left_join(bdd_shop,by = c("customer.id" = "bikeshop.id"))
bike_final %>%  glimpse()
View(bike_final)
fs::dir_create("00_data/bike_sales/data_wrangled_student")
### 3.3.1. Excel
bike_final %>%
write_xlsx("Datasets/data_bikes/bike_final.xlsx")
packages <- c('tidyverse','readxl','haven','easypackages','strings','writexl')
library(easypackages) #easypackages me permite cargar varios paquetes a la vez
libraries(packages)
### 3.3.1. Excel
bike_final %>%
write_xlsx("Datasets/data_bikes/bike_final.xlsx")
### 3.3.2. CSV
bike_final %>%
write_xlsx("Datasets/data_bikes/bike_final.csv")
getwd()
packages <- c('tidyverse','readxl','haven','easypackages','strings','writexl')
install.packages(packages)
library(easypackages) #easypackages me permite cargar varios paquetes a la vez
libraries(packages)
## 1.1. Base de datos de tipos '.csv'
?read_csv
data_asa <- read_csv("Datasets/ASA_pasajeros.csv")
View(data_asa)
str(data_asa)
data_asa <- read_csv("Datasets/ASA_pasajeros.csv", skip = 5)
View(data_asa)
data_asa <- read_csv("Datasets/ASA_pasajeros.csv", skip = 5,col_names = F)
View(data_asa)
data_asa <- read_csv("Datasets/ASA_pasajeros.csv")
str(data_asa)
## 1.2. Base de datos de tipo '.xls y .xlsx'
excel_sheets("Datasets/data_bikes/bikes.xlsx") # sirve para saber el nombre de las hojas dentro del archivo excel
bdd_bikes <- read_excel("Datasets/data_bikes/bikes.xlsx")
View(bdd_bikes)
ejemplo <- read_excel("Datasets/data_bikes/bikes.xlsx",sheet = "Ejemplo")
View(ejemplo)
str(ejemplo)
### Ahora si deseo cargar las distintas hojas del mismo archivo excel em
### dataframes diferentes.
data_list <- excel_sheets("Datasets/data_bikes/bikes.xlsx")
list <- lapply(data_list, function(data_list) read_excel("Datasets/data_bikes/bikes.xlsx",
sheet = data_list))
View(list)
names(list)
names(list) <- data_list
View(list)
list2env(list,envir = .GlobalEnv)
View(Sheet1)
View(Ejemplo)
bdd1 <- Ejemplo
rm(Ejemplo)
bdd_personas <- read_sav("Datasets/SPSS_enemdu_201912/enemdu_persona_201912.sav")
View(bdd_personas)
load("Datasets/BiciQ.RData") %>% data.frame()
View(df1)
data_asa <- read_csv("Datasets/ASA_pasajeros.csv")
df1 <- data.frame(A= 1:3, B= letters[1:3])
df2 <- data.frame(A= 1:4, B= letters[1:4])
resultado <- rbind(df1,df2)
View(resultado)
resultado
df1 <- data.frame(A= 1:3, B= letters[1:3])
df2 <- data.frame(X= 1:3, Y= letters[1:3])
resultado <- cbind(df1,df2)
resultado
bdd_1 <- data.frame(id=(1:5),costo=seq(100,104))
bdd_2 <- data.frame(id=seq(2,10,2),producto=letters[1:5])
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id") # usando funcion merge
bdd_inner
bdd_1
bdd_2
bdd_inner
bdd_inner <- bdd_1 %>% inner_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all = TRUE) # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% full_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all.x = TRUE) # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% left_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner <- bdd_1 %>% left_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
bdd_inner <- merge(x = bdd_1, y = bdd_2,by = "id",all.y = TRUE) # usando funcion merge
bdd_inner
bdd_inner <- bdd_1 %>% right_join(bdd_2,by = "id") # usando funcion inner_join
bdd_inner
df_base <- data.frame(Alumno = LETTERS[1:6], Matematicas = sample(x = 1:10, size = 6, replace = TRUE),
Lenguaje = sample(x = 1:10, size = 6, replace = TRUE))
df_base
df_modificatorio <- data.frame(Alumno = c("E", "C"), Matematicas = c(99, 88))
df_modificatorio
df_base$Alumno %in% df_modificatorio$Alumno #pregunto de la data base se encuentra contenido por la modificado
# Con la funcion match
# match
match(x= df_base$Alumno, table= df_modificatorio$Alumno)
# Con la funcion match
# match
match(x= df_base$Alumno, table= df_modificatorio$Alumno,nomatch = 0)
df_base[df_base$Alumno %in% df_modificatorio$Alumno, ] #%in%
df_motificatorio[df_base$Alumno %in% df_modificatorio$Alumno, ] #%in%
df_modificatorio[df_base$Alumno %in% df_modificatorio$Alumno, ] #%in%
df_modificatorio[df_modificatorio$Alumn %in% df_base$Alumno, ] #%in%
df_base[match(x = df_modificatorio$Alum, table = df_base$Alum, nomatch = 0), ] # match()
packages <- c('tidyverse','readxl')
library(easypackages) #easypackages me permite cargar varios paquetes a la vez
libraries(packages)
bdd_1 <- read_excel("Datasets/data_sociodemografica.xlsx")
View(bdd_1)
summary(bdd_1)
glimpse(bdd_1)
bdd_1 <- as.numeric(bdd_1$egresos)
bdd_1 <- data.frame(as.numeric(bdd_1$egresos))
bdd_1 <- read_excel("Datasets/data_sociodemografica.xlsx")
glimpse(bdd_1)
bdd_1 <- data.frame(as.numeric(bdd_1$egresos))
bdd_1$egresos <- as.numeric(bdd_1$egresos)
bdd_1 <- read_excel("Datasets/data_sociodemografica.xlsx")
glimpse(bdd_1)
bdd_1$egresos <- as.numeric(bdd_1$egresos)
View(bdd_1)
bdd_1$origen.fondos <- NULL
View(bdd_1)
glimpse(bdd_1)
summary(bdd_1)
# 1. Recodificación de variales
bdd_1$cargas <- ifelse(bdd_1$numero.cargas>0,"Si","No")
View(bdd_1)
bdd_1$pea <- ifelse(bdd_1$edad<=15,"PEI","PEA")
View(bdd_1)
bdd_1$poblacion_ec <- ifelse(bdd_1$edad<=15,"PEI","PEA")
packages <- c('tidyverse','readxl','car')
install.packages("car")
## 1.1. Función recode
library(car)
unique(bdd_1$genero)
unique(bdd_1$genero)
bdd_1$sexo <- recode(bdd_1$genero,'MASCULINO=1 ; FEMENINO=2; else=NA')
bdd_1$sexo <- recode(bdd_1$numero.cargas,'1=0 ; 2=1')
View(bdd_1)
bdd_1$estado.civil <- ifelse(bdd_1$estado.civil = '-','SINF',bdd_1$estado.civil)
bdd_1$estado.civil <- ifelse(bdd_1$estado.civil == '-','SINF',bdd_1$estado.civil)
View(bdd_1)
unique(bdd_1$estado.civil)
bdd_1$sexo <- recode(bdd_1$numero.cargas,'MASCULINO == 1')
bdd_1$sexo <- recode(bdd_1$genero,'MASCULINO == 1')
bdd_1$sexo <- recode(bdd_1$genero,"'MASCULINO' = 1")
View(bdd_1)
bdd_1$sexo <- recode(bdd_1$genero,"'MASCULINO' = 1; 'FEMENINO' = 2; '-' = 'NA'")
View(bdd_1)
unique(bdd_1$sexo)
summary(bdd_1$sexo)
bdd_1$sexo <- recode(bdd_1$genero,"'MASCULINO' = 1; 'FEMENINO' = 2; '-' = .")
na(1)
bdd_1$sexo <- recode(bdd_1$genero,"'MASCULINO' = 1; 'FEMENINO' = 2; '-' <- NA")
summary(bdd_1$sexo)
bbd_1$sexo <- as.integer(bdd_1$sexo)
View(bdd_1)
summary(bdd_1$sexo)
bbd_1$sexo <- as.integer(bdd_1$sexo)
bbd_1$sexo <- as.interger(bdd_1$sexo)
bbd_1$sexo <- as.integer(bdd_1$sexo)
bbd_1$sexo <- as.numeric(bdd_1$sexo)
bdd_1$sexo <- as.integer(bdd_1$sexo)
summary(bdd_1$sexo)
bdd_1$grupos.edad <- cut(bdd_1$edad,breaks = c(0,18,40,65),
labels = c('menor a 18','De 18 a 40','De 40 a 65','mayor a 65'))
bdd_1$grupos.edad <- cut(bdd_1$edad,breaks = c(0,18,40,65),
labels = c('menor a 18','De 18 a 40','De 40 a 65','mayor a 65'))
bdd_1$grupos.edad <- cut(bdd_1$edad,breaks = c(0,18,40,65,65),
labels = c('menor a 18','De 18 a 40','De 40 a 65','mayor a 65'))
bdd_1$grupos.edad <- cut(bdd_1$edad,breaks = c(0,18,40,65,>65),
labels = c('menor a 18','De 18 a 40','De 40 a 65','mayor a 65'))
bdd_1$grupos.edad <- cut(bdd_1$edad,breaks = c(0,18,40,65,100),
labels = c('menor a 18','De 18 a 40','De 40 a 65','mayor a 65'))
summary(bdd_1$edad)
bdd_1$grupos.edad <- cut(bdd_1$edad,breaks = c(0,18,40,65,112),
labels = c('menor a 18','De 18 a 40','De 40 a 65','mayor a 65'))
bdd_1$grupos.edad
bdd_1 <- tbl_df(bdd_1)
bdd_1 <- tibble::as.tibble(bdd_1)
bdd_1 <- tibble::as_tibble(bdd_1)
bdd_1
data("storms")
force(storms)
View(storms)
storms %>% select(day,hout)
storms %>% select(day,hour)
storms %>% select(-year, wind) # todas excepto la indicada
storms %>% select(-year, -wind) # todas excepto la indicada
storms %>% select(name:hour)
storms %>% select(-(name:hour))
stroms %>% select(starts_with("w"))
storms %>% select(starts_with("w"))
storms %>% filter(wind >= 50)
storms %>% filter(wind >= 50, storm %in% c("Alberto", "Alex", "Allison"))
storms %>% filter(wind >= 50, %in% c("Alberto", "Alex", "Allison"))
storms %>% filter(wind >= 50, name = c("Alberto", "Alex", "Allison"))
storms %>% filter(wind >= 50, name == c("Alberto", "Alex", "Allison"))
storms %>% filter(wind >= 50, name %in% c("Alberto", "Alex", "Allison"))
storms %>% filter(wind>=50 & pressure<1010)
storms %>% arrange(wind)
storms %>% arrange(desc(wind))
storms %>% arrange(wind, date) # más de una variable
storms %>% arrange(wind, day) # más de una variable
storms %>% arrange(wind, year) # más de una variable
names(storms)
storms %>% rename(tormenta = storm, viento = wind, presion = pressure, año = year)
storms %>% rename(estado = status, viento = wind, presion = pressure, año = year)
storm %>% mutate(ratio = pressure/wind)
storms %>% mutate(ratio = pressure/wind)
storms %>% mutate(ratio = pressure/wind) %>% select(ratio)
storms %>% mutate(freq.acumulative = cumsum(wind))
storms %>% mutate(freq.acumulative = cumsum(wind)) %>% select(freq.acumulative)
View(storms)
data(pollution)
pollution
data("Salaries")
force(Salaries)
View(Salaries)
Salaries %>% summarise(mediana = median(salary), variance = var(salary))
View(Salaries)
Salaries %>% group_by(sex,rank)
Salaries %>% group_by(sex)
View(Salaries)
Salaries %>%  group_by(sexo) %>%
summarise(mean = mean(salary), sum = sum(salary), n = n())
Salaries %>%  group_by(sex) %>%
summarise(mean = mean(salary), sum = sum(salary), n = n())
browserURL(url("https://dplyr.tidyverse.org/"),browser = getOption("browser"))
browserURL(url= "https://dplyr.tidyverse.org/",browser = getOption("browser"))
browseURL(url= "https://dplyr.tidyverse.org/",browser = getOption("browser"))
packages <- c('tidyverse','readxl','haven','easypackages','strings','writexl')
library(easypackages) #easypackages me permite cargar varios paquetes a la vez
libraries(packages)
bdd_bikes <- read_excel("Datasets/data_bikes/bikes.xlsx")
bdd_shop <- read_excel("Datasets/data_bikes/bikeshops.xlsx")
bdd_orders <- read_excel("Datasets/data_bikes/orderlines.xlsx")
View(bdd_bikes)
View(bdd_shop)
View(bdd_orders)
glimpse(bdd_bikes)
left_join(bdd_orders, bdd_bikes,by = c("product.id" = "bike.id"))
bdd_orders %>% left_join(bdd_bikes,by = c("product.id" = "bike.id"))
View(bdd_orders)
bike_final <- bdd_orders %>%
left_join(bdd_bikes,by = c("product.id" = "bike.id")) %>%
left_join(bdd_shop,by = c("customer.id" = "bikeshop.id"))
View(bike_final)
bike_final %>%  glimpse()
fs::dir_create("Datasets/Base Final")
### 3.3.1. Excel
bike_final %>%
write_xlsx("Datasets/Base Final/bike_final.xlsx")
### 3.3.2. CSV
bike_final %>%
write_xlsx("Datasets/Base Final/bike_final.csv")
base_final %>% write_sav("Datasets/Base Final/bike_fianl.sav")
bike_final %>% write_sav("Datasets/Base Final/bike_final.sav")
packages <- c('tidyverse','readxl','car')
library(easypackages) #easypackages me permite cargar varios paquetes a la vez
libraries(packages)
bdd_1 <- read_excel("Datasets/data_sociodemografica.xlsx")
View(bdd_1)
glimpse(bdd_1)
summary(bdd_1)
bdd_1$egresos <- as.numeric(bdd_1$egresos)
View(bdd_1)
summary(bdd_1)
unique(bdd_1$origen.fondos)
bdd_1$origen.fondos <- NULL
unique(bdd_1$estado.civil)
bdd_1$estado.civil <- ifelse(bdd_1$estado.civil == '-','SINF',bdd_1$estado.civil)
unique(bdd_1$estado.civil)
bdd_1$cargas <- ifelse(bdd_1$numero.cargas>0,"Si","No")
View(bdd_1)
bdd_1$sexo <- recode(bdd_1$genero,"'MASCULINO' = 1; 'FEMENINO' = 2; '-' = NA")
View(bdd_1)
glimpse(bdd_1$sexo)
glimpse(bdd_1)
table(bdd_1$sexo)
prop.table(bdd_1$sexo)
pro.table(bdd_1$sexo)
summary(bdd_1)
bdd_1$sexo <- recode(bdd_1$genero,"'MASCULINO' = 1; 'FEMENINO' = 2; '-' = 'NA'")
summary(bdd_1)
bdd_1$sexo <- as.integer(bdd_1$sexo)
summary(bdd_1$edad)
bdd_1$grupos.edad <- cut(bdd_1$edad,breaks = c(0,18,40,65,112),
labels = c('menor a 18','De 18 a 40',
'De 40 a 65','mayor a 65'))
bdd_1
bdd_1 <- tibble::as_tibble(bdd_1)
bdd_1
browseURL(url= "https://dplyr.tidyverse.org/",browser = getOption("browser"))
data("storms")
force(storms)
View(storms)
storms %>% select(day,hour) # solo las filas seleccionadas
base2 <- storms %>% select(day,hour) # solo las filas seleccionadas
View(base2)
rm(base2)
storms %>% select(-year, -wind) # todas excepto la indicada
storms %>% select(name:hour)
storms %>% select(-(name:hour))
storms %>% select(starts_with("l"))
storms %>% select(starts_with("l"))
storms %>% filter(wind >= 50)
b1 <- storms %>% filter(wind >= 50)
b1 <- storms %>% filter(wind >= 50, name %in% c("Alberto", "Alex", "Allison"))
storms %>% filter(wind>=50 & pressure<1010)
storms %>% arrange(wind)
storms %>% arrange(desc(wind))
storms %>% arrange(desc(wind))
storms %>% arrange(wind, year) # más de una variable
names(storms)
storms %>% rename(estado = status, viento = wind, presion = pressure, año = year)
storms %>% mutate(ratio = pressure/wind)
storms %>% mutate(ratio = pressure/wind) %>% select(ratio)
storms %>% mutate(ratio=pressure/wind, inverse=ratio^-1)
storms %>% mutate(freq.acumulative = cumsum(wind))
storms %>% mutate(freq.acumulative = cumsum(wind)) %>% select(freq.acumulative)
data("Salaries")
force(Salaries)
View(Salaries)
Salaries %>% summarise(mediana = median(salary), variancia = var(salary))
Salaries %>% summarise(mediana = median(salary), varianza = var(salary))
Salaries %>% group_by(sex)
Salaries %>%  group_by(sex) %>%
summarise(media = mean(salary), sum = sum(salary), n = n())
install.packages("coronavirus")
library(coronavirus)
update_dataset()
data("coronavirus")
force(coronavirus)
# 3. Escribir "Y" en la cosoloa y dar enter
# 4. cargar el data frame con las siguientes lineas de código
data("coronavirus") %>% data.frame()
# 3. Escribir "Y" en la cosoloa y dar enter
# 4. cargar el data frame con la siguiente linea de código
covid19 <- data("coronavirus")
force(coronavirus)
# 3. Escribir "Y" en la cosoloa y dar enter
# 4. cargar el data frame con la siguiente linea de código
data("coronavirus")
# 3. Escribir "Y" en la cosoloa y dar enter
# 4. cargar el data frame con la siguiente linea de código
data("coronavirus")
force(coronavirus)
View(coronavirus)
summary(coronavirus$date)
install.packages("devtools")
devtools::install_github("RamiKrispin/coronavirus")
# 3. Escribir "3" en la cosoloa y dar enter
# 4. cargar el data frame con la siguiente linea de código
data("coronavirus")
# 3. Escribir "3" en la cosoloa y dar enter
# 4. cargar el data frame con la siguiente linea de código
library(coronavirus)
# 3. Escribir "3" en la cosoloa y dar enter
# 4. cargar el data frame con la siguiente linea de código
update_dataset()
covid19 <- data.frame(coronavirus)
View(covid19)
summary(cvid19)
summary(covid19)
