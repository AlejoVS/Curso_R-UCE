data.cleaning2 <- algae[complete.cases(algae,)]
data.cleaning2 <- algae[complete.cases(algae),]
### 1.1.2. Paquete mice
imp <- mice(algae,method = "mean",seed = 122,print=F)
imp
sapply(algae_mice,function(x){sum(is.na(x))})
sapply(imp,function(x){sum(is.na(x))})
# Paquete esquisse
library(esquisse)
esquisse:::esquisser()
esquisse:::esquisser()
# install.packages(shiny)
data("iris")
force(iris)
esquisse:::esquisser()
library(ggplot2)
ggplot(iris) +
aes(x = Species, y = Sepal.Width, fill = Species) +
geom_boxplot() +
scale_fill_brewer(palette = "PiYG") +
labs(x = "Especies", y = "Valores", caption = "Tamaño de sepalo según las especies de flores", fill = "ESPECIES") +
theme_bw() +
theme(legend.position = "top")
packages <- c('tidyverse','ggplot2','visdat','caret','recipes',
'mice','Hmisc','DMwR')
library(easypackages)
libraries(packages)
x <- c(1,2,5,8,9,NA)
is.na(x) # devuleve una respuesta de tipo buleana donde TRUE muestra la presencia de NA's
which(is.na(x)) # posición de los valores perdidos
data(algae)
glimpse(algae)
View(algae)
is.na(algae)
which(is.na(x))
which(is.na(algae))
sum(is.na(algae))
algae %>%
is.na()
View(algae)
algae %>%
is.na() %>%
reshape2::melt()
algae %>%
is.na() %>%
reshape2::melt() %>%
ggplot(aes(Var2, Var1, fill=value))
algae %>%
is.na() %>%
reshape2::melt() %>%
ggplot(aes(Var2, Var1, fill=value)) +
geom_raster()
algae %>%
is.na() %>%
reshape2::melt() %>%
ggplot(aes(Var2, Var1, fill=value)) +
geom_raster() +
coord_flip()
algae %>%
is.na() %>%
reshape2::melt() %>%
ggplot(aes(Var2, Var1, fill=value)) +
geom_raster() +
coord_flip() +
scale_y_continuous(NULL, expand = c(0, 0))
algae %>%
is.na() %>%
reshape2::melt() %>%
ggplot(aes(Var2, Var1, fill=value)) +
geom_raster() +
coord_flip() +
scale_y_continuous(NULL, expand = c(0, 0)) +
scale_fill_grey(name = "",
labels = c("Present",
"Missing"))
algae %>%
is.na() %>%
reshape2::melt() %>%
ggplot(aes(Var2, Var1, fill=value)) +
geom_raster() +
coord_flip() +
scale_y_continuous(NULL, expand = c(0, 0)) +
scale_fill_grey(name = "",
labels = c("Present",
"Missing")) +
labs(title = "Valores perdidos",
x="Observaciones",
y="Varibales")+
theme(axis.text.y  = element_text(size = 5))
theme(axis.text.y  = element_text(size = 10)
algae %>%
is.na() %>%
reshape2::melt() %>%
ggplot(aes(Var2, Var1, fill=value)) +
geom_raster() +
coord_flip() +
scale_y_continuous(NULL, expand = c(0, 0)) +
scale_fill_grey(name = "",
labels = c("Present",
"Missing")) +
labs(title = "Valores perdidos",
x="Observaciones",
y="Varibales")+
theme(axis.text.y  = element_text(size = 10))
algae %>%
is.na() %>%
reshape2::melt() %>%
ggplot(aes(Var2, Var1, fill=value)) +
geom_raster() +
coord_flip() +
scale_y_continuous(NULL, expand = c(0, 0)) +
scale_fill_grey(name = "",
labels = c("Present",
"Missing")) +
labs(title = "Valores perdidos",
x="Observaciones",
y="Varibales")+
theme(axis.text.y  = element_text(size = 10))
sapply(algae,function(x){sum(is.na(x))}) # número de NA´s en la columnas
(apply(apply(X = algae,MARGIN = 2,FUN = is.na )
,MARGIN=2,FUN=sum)
(apply(apply(X = algae,MARGIN = 2,FUN = is.na )
,MARGIN=2,FUN=sum))
lllll
apply(apply(X = algae,MARGIN = 2,FUN = is.na )
,MARGIN=2,FUN=sum))
apply(apply(X = algae,MARGIN = 2,FUN = is.na )
,MARGIN=2,FUN=sum)
,MARGIN=2,FUN=sum)/nrow(algae)
(apply(apply(X = algae,MARGIN = 2,FUN = is.na )
,MARGIN=2,FUN=sum)/nrow(algae))
round((apply(apply(X = algae,MARGIN = 2,FUN = is.na )
,MARGIN=2,FUN=sum)/nrow(algae))*100,2)
data.cleaning <- algae[!is.na(algae$Chla),]
complete.cases(algae)
data.cleaning2 <- algae[complete.cases(algae),]
data(algae)
glimpse(algae)
algae$Chla_mean <- impute(algae$Chla, mean)
mean(algae$Chla)
mean(algae$Chla,na.rm = T)
mean(algae$Chla)
mean(algae$Chla,na.rm = T)
algae$Chla_random <- impute(algae$Chla,'random')
median(algae$Chla,na.rm = T)
algae$Chla_random <- impute(algae$Chla,'random')
algae$Chla_median <- impute(algae$Chla,'median')
which(is.na(algae$Chla))
algae$Chla[56,]
algae$Chla[56,]
algae[56,]
algae$Chla_median <- impute(algae$Chla,median)
which(is.na(algae$Chla))
algae[56,]
imputed_Data <- mice(algae, m=5, maxit = 50, method = 'pmm', seed = 500)
summary(imputed_Data)
algae_mice <- complete(imputed_Data,2)
algae_mice <- complete(imputed_Data,3)
View(algae_mice)
sapply(algae_mice,function(x){sum(is.na(x))})
algae_mice[56,]
algae_mice[56,]
sapply(algae_mice,function(x){sum(is.na(x))})
algae_mice <- algae
algae_mice <- complete(imputed_Data,2)
sapply(algae_mice,function(x){sum(is.na(x))})
algae <- complete(imputed_Data,2)
sapply(algae_mice,function(x){sum(is.na(x))})
### 1.1.1. Paquete DWwR
algae_knn<-knnImputation(algae)
sapply(algae_mice,function(x){sum(is.na(x))})
data (Ozone, package="mlbench")
glimpse(Ozone)
sapply(Ozone,function(x){sum(is.na(x))})
x <- seq(1:100,1)
x <- seq(1,100,1)
IQR(x)
outliers<-function(x){
IQR <- quantile(x, probs=c(.25, .75), na.rm = T)
ext <- quantile(x, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(x, na.rm = T)
x[x < (IQR[1] - H)] <- ext[1]
x[x > (IQR[2] + H)] <- ext[2]
return(x)}
numeric_cols <-names(Ozone)
# Solo variables numeric
numeric_cols <-names(Ozone)[sapply(Ozone, is.numeric)]
numeric_data<-Ozone[,names(Ozone)%in% numeric_cols]
View(numeric_data)
Ozone_IQR<- data.frame(sapply(numeric_data,outliers))
ggplot(numeric_data,aes(x=V13))
ggplot(numeric_data,aes(x=V13))+
geom_boxplot()
ggplot(Ozone_IQR,aes(x=V13))+
geom_boxplot()
median(numeric_data$V13)
mean(numeric_data$V13)
mean(Ozone_IQR$V13)
numeric_data[350,"V13"] <- 500
mean(numeric_data$V13)
mean(Ozone_IQR$V13)
outliers<-function(x){
IQR <- quantile(x, probs=c(.25, .75), na.rm = T)
H <- 1.5 * IQR(x, na.rm = T)
x[x < (IQR[1] - H)] <- NA
x[x > (IQR[2] + H)] <- NA
return(x)}
numeric_cols<-names(Ozone)[sapply(Ozone, is.numeric)]
numeric_data<-Ozone[,names(Ozone)%in% numeric_cols]
outliers_missing <-data.frame(sapply(numeric_data,outliers))
Ozone_knn<-knnImputation(outliers_missing)
ggplot(numeric_data,aes(x=V13))+
geom_boxplot()
ggplot(outliers_missing,aes(x=V13))+
geom_boxplot()
mean(numeric_data$V13)
mean(Ozone_IQR$V13)
mean(outliers_missing$V13)
mean(outliers_missing$V13,na.rm = T)
mean(numeric_data$V13)
View(Ozone_knn)
View(outliers_missing)
x <- c(1,2,5,8,9,NA)
is.na(x) # devuleve una respuesta de tipo buleana donde TRUE muestra la presencia de NA's
which(is.na(x)) # posición de los valores perdidos
data(algae)
glimpse(algae)
is.na(algae)
which(is.na(algae))
sum(is.na(algae))
which(is.na(algae[,]))
which(is.na(ncol(algae)))
sum(is.na(algae))# suma de valores perdidos dentro de la data
algae %>%
is.na() %>%
reshape2::melt() %>%
ggplot(aes(Var2, Var1, fill=value)) +
geom_raster() +
coord_flip() +
scale_y_continuous(NULL, expand = c(0, 0)) +
scale_fill_grey(name = "",
labels = c("Present",
"Missing")) +
labs(title = "Valores perdidos",
x="Observaciones",
y="Varibales")+
theme(axis.text.y  = element_text(size = 10))
sapply(algae,function(x){sum(is.na(x))}) # número de NA´s en la columnas
round((apply(apply(X = algae,MARGIN = 2,FUN = is.na )
,MARGIN=2,FUN=sum)/nrow(algae))*100,2)
data.cleaning <- algae[!is.na(algae$Chla),]
complete.cases(algae)
data.cleaning2 <- algae[complete.cases(algae),]
mean(algae$Chla,na.rm = T)
algae$Chla_mean <- impute(algae$Chla, mean)
algae$Chla_random <- impute(algae$Chla,random)
algae$Chla_random <- impute(algae$Chla,'random')
median(algae$Chla,na.rm = T)
algae$Chla_median <- impute(algae$Chla,median)
which(is.na(algae$Chla))
algae[56,]
### 1.1.2. Paquete mice
misDf<-misDf<-algae[,colSums(is.na(algae))>0]
misDf
missmap(misDf)
### 1.1.2. Paquete mice
algae <- algae<-algae[,colSums(is.na(algae))>0]
imputed_Data <- mice(algae, m=5, maxit = 50, method = 'pmm', seed = 500)
algae_mice <- complete(imputed_Data,2)
sapply(algae_mice,function(x){sum(is.na(x))})
algae_mice[56,]
### 1.1.1. Paquete DWwR
algae_knn<-knnImputation(algae)
sapply(algae_mice,function(x){sum(is.na(x))})
### 1.1.2. Paquete mice
algae<-algae[,colSums(is.na(algae))>0]
imputed_Data <- mice(algae, m=5, maxit = 8, method = 'pmm', seed = 500)
algae[,colSums(is.na(algae))>0]
algae_mice <- complete(imputed_Data,2)
sapply(algae_mice,function(x){sum(is.na(x))})
algae_mice[56,]
### 1.1.1. Paquete DWwR
algae_knn<-knnImputation(algae)
sapply(algae_mice,function(x){sum(is.na(x))})
data (Ozone, package="mlbench")
glimpse(Ozone)
sapply(Ozone,function(x){sum(is.na(x))})
data (Ozone, package="mlbench")
ne, package="mlbench")
sapply(Ozone,function(x){sum(is.na(x))})
outliers<-function(x){
IQR <- quantile(x, probs=c(.25, .75), na.rm = T)
ext <- quantile(x, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(x, na.rm = T)
x[x < (IQR[1] - H)] <- ext[1]
x[x > (IQR[2] + H)] <- ext[2]
return(x)}
# Solo variables numeric
numeric_cols <-names(Ozone)[sapply(Ozone, is.numeric)]
numeric_data<-Ozone[,names(Ozone)%in% numeric_cols]
Ozone_IQR<- data.frame(sapply(numeric_data,outliers))
ggplot(numeric_data,aes(x=V13))+
geom_boxplot()
ggplot(Ozone_IQR,aes(x=V13))+
geom_boxplot()
sapply(Ozone,function(x){sum(is.na(x))})
sapply(Ozone_IQR,function(x){sum(is.na(x))})
mean(numeric_data$V13)
mean(Ozone_IQR$V13)
algae<-algae[,colSums(is.na(algae))>0]
Ozone_IQR<-Ozone_IQR[,colSums(is.na(Ozone_IQR))>0]
Ozone_knn<-knnImputation(outliers_missing) # metodo knn
Ozone_knn<-knnImputation(Ozone_IQR) # metodo knn
sapply(Ozone,function(x){sum(is.na(x))})
sapply(Ozone_knn,function(x){sum(is.na(x))})
outliers<-function(x){
IQR <- quantile(x, probs=c(.25, .75), na.rm = T)
H <- 1.5 * IQR(x, na.rm = T)
x[x < (IQR[1] - H)] <- NA
x[x > (IQR[2] + H)] <- NA
return(x)}
numeric_cols<-names(Ozone)[sapply(Ozone, is.numeric)]
numeric_data<-Ozone[,names(Ozone)%in% numeric_cols]
outliers_missing <-data.frame(sapply(numeric_data,outliers))
# Gráfico con data normal
ggplot(numeric_data,aes(x=V13))+
geom_boxplot()
ggplot(outliers_missing,aes(x=V13))+
geom_boxplot()
# Imputar valores NA
outliers_missing<-outliers_missing[,colSums(is.na(outliers_missing))>0]
Ozone_knn<-knnImputation(outliers_missing)
mean(numeric_data$V13)
Ozone_knn<-knnImputation(outliers_missing)
sapply(Ozone_knn,function(x){sum(is.na(x))})
mean(numeric_data$V13)
mean(outliers_missing$V13,na.rm = T)
mean(Ozone_knn$V13,na.rm = T)
mean(numeric_data$V13)
mean(Ozone_knn$V13,na.rm = T)
data(algae)
glimpse(algae)
### 1.1.2. Paquete mice
algae<-algae[,colSums(is.na(algae))>0]
imputed_Data <- mice(algae, m=5, maxit = 8, method = 'pmm', seed = 500)
algae_mice <- complete(imputed_Data,2)
sapply(algae_mice,function(x){sum(is.na(x))})
algae_mice[56,]
### 1.1.2. Paquete mice
algae<-algae[,colSums(is.na(algae))>0]
imputed_Data <- mice(algae, m=5, maxit = 8, method = 'pmm', seed = 500)
algae_mice <- complete(imputed_Data,2)
sapply(algae_mice,function(x){sum(is.na(x))})
algae_mice <- algae[,names(algae)%in% algae_mice]
### 1.1.2. Paquete mice
algae<-algae[,colSums(is.na(algae))>0]
imputed_Data <- mice(algae, m=5, maxit = 8, method = 'pmm', seed = 500)
algae_mice <- complete(imputed_Data,2)
sapply(algae_mice,function(x){sum(is.na(x))})
data(algae)
packages <- c('tidyverse','ggplot2','visdat','caret','recipes',
'mice','Hmisc','DMwR')
libraries(packages)
data(algae)
ggpairs(data_venta_publicidad, lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"), axisLabels = "none")
paquetes <- c('tidyverse','GGally','openxlsx','MASS','hexbin','modelr','lmtest',
'car','boot','leaps')
libraries(paquetes)
library(easypackages)
libraries(paquetes)
data_venta_publicidad <- read.xlsx("Datasets/Venta_vs_Publicidad.xlsx", detectDates = TRUE)
str(data_venta_publicidad)
data_venta_publicidad <- tibble::as.tibble( data_venta_publicidad)
data_venta_publicidad %>%
ggplot(., aes(PUBLICIDAD_TOTAL, VENTA)) +
geom_point()
ggpairs(data_venta_publicidad, lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"), axisLabels = "none")
data_venta_publicidad %>% select_if(is.numeric) %>% as.data.frame %>% ggscatmat
ggpairs(data_venta_publicidad, lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"), axisLabels = "none")
colSums(is.na(algae))
packages <- c('tidyverse','ggplot2','visdat','caret','recipes',
'mice','Hmisc','DMwR')
library(easypackages)
libraries(packages)
data(algae)
glimpse(algae)
colSums(is.na(algae))
sapply(algae,function(x){sum(is.na(x))}) # número de NA´s en la columnas
colSums(is.na(algae))
### 1.1.2. Paquete mice
imputed<-algae[,colSums(is.na(algae))>0]
View(imputed)
imputed_Data <- mice(imputed, m=5, maxit = 8, method = 'pmm', seed = 500)
algae_mice <- complete(imputed_Data,2)
View(algae_mice)
sapply(algae_mice,function(x){sum(is.na(x))})
algae_mice[56,]
algae[56,]
View(algae_mice)
algae$mxPH <- algae_mice$mxPH
View(algae)
sapply(algae,function(x){sum(is.na(x))})
paquetes <- c('tidyverse','GGally','openxlsx','MASS','hexbin','modelr','lmtest',
'car','boot','leaps')
library(easypackages)
libraries(paquetes)
data_venta_publicidad <- read.xlsx("Datasets/Venta_vs_Publicidad.xlsx", detectDates = TRUE)
data_venta_publicidad <- tibble::as.tibble( data_venta_publicidad)
data_venta_publicidad
data_venta_publicidad %>%
ggplot(., aes(PUBLICIDAD_TOTAL, VENTA)) +
geom_point()
ggpairs(data_venta_publicidad, lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"), axisLabels = "none")
data_venta_publicidad %>%
ggplot(., aes(PUBLICIDAD_TOTAL, VENTA)) +
geom_point()
ggpairs(data_venta_publicidad, lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"), axisLabels = "none")
# Estimación
mod_1 <- lm(VENTA ~ PUBLICIDAD_TOTAL, data = data_venta_publicidad)
View(mod_1)
summary(mod_1)
## Crea una tabla de datos base para predecir
grid <- data_venta_publicidad %>%
data_grid(PUBLICIDAD_TOTAL)
View(grid)
View(data_venta_publicidad)
## Agrega predicciones
grid <- grid %>%
add_predictions(mod_1, var = 'PREDIC')
View(grid)
data_venta_publicidad %>%
ggplot(., aes(x= PUBLICIDAD_TOTAL)) +
geom_point(aes(y= VENTA))
## Graficar
data_venta_publicidad %>%
ggplot(., aes(x= PUBLICIDAD_TOTAL)) +
geom_point(aes(y= VENTA)) +
geom_line(aes(y= PREDIC), data = grid, colour = "red", size = 1) +
ggtitle("Datos + predicción")
data_venta_publicidad <- data_venta_publicidad %>%
add_residuals(mod_1, var = 'RESIDUALES')
View(data_venta_publicidad)
head(data_venta_publicidad, 5)
## Explorar los residuales
ggplot(data_venta_publicidad, aes(RESIDUALES)) +
geom_freqpoly()
## Gráfico qq
mod_1 %>%
ggplot(., aes(qqnorm(.stdresid)[[1]], .stdresid)) +
geom_point(na.rm = TRUE) +
geom_abline() +
xlab("Theoretical Quantiles") +
ylab("Standardized Residuals") +
ggtitle("Normal Q-Q")
# Si tuviésemos pocos datos
shapiro.test(data_venta_publicidad$RESIDUALES)
# Test KS
ks.test(data_venta_publicidad$RESIDUALES, "pnorm")
# Podemos utilizar los residuos studentizados
data_venta_publicidad$STUDRESIDUAL <- studres(mod_1)
View(data_venta_publicidad)
# Test KS
ks.test(data_venta_publicidad$STUDRESIDUAL, "pnorm")
## Explorar la varianza
ggplot(data_venta_publicidad, aes(PUBLICIDAD_TOTAL, RESIDUALES)) +
geom_ref_line(h = 0) +
geom_point() +
ggtitle("Residuos")
## Prueba de homocedasticidad
bptest(mod_1)
# Correlacion
## Grafico ACF
acf( residuals( mod_1))
# H0: La autocorrelación de los residuos es 0 vs
# H1: La autocorrelación de los residuos es diferente de 0
dwtest(mod_1,alternative = "two.side")
mod_1a <- lm(VENTA ~ log(PUBLICIDAD_TOTAL), data = data_venta_publicidad)
summary(mod_1a)
## Crea una tabla de datos base para predecir
grid <- data_venta_publicidad %>%
data_grid(PUBLICIDAD_TOTAL)
## Agrega predicciones
grid <- grid %>%
add_predictions(mod_1a, var = 'PREDIC')
## Graficar
data_venta_publicidad %>%
ggplot(., aes(x= PUBLICIDAD_TOTAL)) +
geom_point(aes(y= VENTA)) +
geom_line(aes(y= PREDIC), data = grid, colour = "red", size = 1) +
ggtitle("Datos + predicción")
bptest(mod_1a)
## Predecir con el primer modelo
predict(mod_1, newdata = data.frame(PUBLICIDAD_TOTAL= 2000))
View(grid)
grid %>% filter(PUBLICIDAD_TOTAL== 2000)
## Predecir con el modelo transformado
predict(mod_1a, newdata = data.frame(PUBLICIDAD_TOTAL= 2000))
library(dbplyr)
library(dplyr, warn.conflicts = FALSE)
a
lf <- lazy_frame(g = 1, a = 1, b = 2, c = 3)
lf %>%
group_by(g) %>%
summarise(across(everything(), mean, na.rm = TRUE))
lf <- lazy_frame(x1 = 1, x2 = 2, x3 = 3, y1 = 4, y2 = 3)
lf %>% select(starts_with("x") & !"x3")
lf %>% select(ends_with("2") | ends_with("3"))
