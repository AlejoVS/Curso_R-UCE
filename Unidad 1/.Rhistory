rmarkdown::render("in.Rmd", output_format = "powerpoint_presentation")
rmarkdown::render("C01-Introduccion.Rmd", output_format = "powerpoint_presentation")
rmarkdown::render("C01-Introduccion.Rmd", output_format = "powerpoint_presentation")
getwd()
setwd("~/Learning-R/Curso R - UCE/Presentaciones")
rmarkdown::render("C01-Introduccion.Rmd", output_format = "powerpoint_presentation")
getwd()
<b> <font color=SteelBlue face=Cambria size=7> = </font> </b>
![R](figures/interfaz_R.PNG)
<b> <font color=SteelBlue face=Cambria size=7> = </font> </b>
![R](figures/interfaz_R.PNG)
## <b> <font color=SteelBlue face=Arial size=6> Instalación de paquetes</font> </b>
<p align="right" width="20" height="20">
![Paquetes](figures/rstudio_paquetes.png){ width=15% }
search()
library(ggplot2)
search()
# Instalacion desde el repositorio CRAN
install.packages('tidyverse')
# Reducimos el area de impresion
options(width=45)
rnorm(10)
# Aumentamos el area de impresion
options(width=95)
rnorm(10)
# Instalacion multiples paquetes
packages <- c("ggplot2","lubridate","readr")
install.packages(packages, dependencies=TRUE)
# funciones apply
sapply(X=packages, FUN=install.packages, dependencies=TRUE)
(.packages())
install.packages(packages, dependencies=TRUE)
(.packages())
(.packages())
# Cargar las librerias
library(ggplot2)
# Cargar varios paquetes
packages <- c("ggplot2","lubridate","readr")
sapply(X=packages, FUN=library, character.only=TRUE)
# funciones apply
# sapply(X=packages, FUN=library, character.only=TRUE)
(.packages())
# Cargar las librerias
library(ggplot2)
# Vectores
typeof(a)
# Vectores
a <- 250
typeof(a)
# Longitud (Número de elementos)
length(a)
# Atributos (Metadata)
attributes(a)
# Para probar que una estructura de datos es un vector (atómico o lista)
# se utiliza la función:
is.vector(a)
# Vectores atómicos
dbl_var <- c(1, 2, -1)
int_var <- c(3L, 7L, 1L) # con el sufijo L se declaran números enteros
log_var <- c(FALSE, TRUE, F, T) # TRUE y FALSE (T, F) se usan para crear
c(1, c(2, c(3,4))) ; c(1, 2, 3, 4) # los vectores pueden ser anidados
a <- c(1, c(2, c(3,4)))
a
a <- c(1, c(2, c(3,4))); c(1, 2, 3, 4)
a
c(1, c(2, c(3,4))) ; c(1, 2, 3, 4,5) # los vectores pueden ser anidados
typeof(dbl_var)
# Elementos de una matriz
# Columnas 2 y 4
mtx <- matrix (1:12, nrow=3, ncol=4, byrow=FALSE)
mtx[,c(2,4)]
# Filas 2 y 4
mtx[c(2,4),]
x
# Ejemplo más ilustrativo
x<-array(c(45,46,65,55,170,167,48,49,68,56,169,165),c(2,3,2))
dimnames(x)<-list(c("hombres","mujeres"),c("edad","peso","altura"),
c("Sur","Norte"))
x
x[,,3]
# Ejemplo más ilustrativo
x<-array(c(45,46,65,55,170,167,48,49,68,56,169,165),c(2,3,2))
